{
  "manifest_version": "1",
  "task_list": [
    {
      "name": "Convert 2D segmentation to 3D",
      "executable": "convert_2D_segmentation_to_3D.py",
      "input_type": "zarr",
      "output_type": "zarr",
      "args_schema": {
        "title": "Convert2dSegmentationTo3d",
        "type": "object",
        "properties": {
          "input_paths": {
            "title": "Input Paths",
            "description": "List of paths to the input files (Fractal managed)"
          },
          "output_path": {
            "title": "Output Path",
            "description": "Path to the output file (Fractal managed)"
          },
          "component": {
            "title": "Component",
            "description": "Component name, e.g. \"plate_name.zarr/B/03/0\" (Fractal managed)"
          },
          "metadata": {
            "title": "Metadata",
            "description": "Metadata dictionary (Fractal managed)"
          },
          "label_name": {
            "title": "Label Name",
            "type": "string",
            "description": "Name of the label to copy from 2D OME-Zarr to 3D OME-Zarr"
          },
          "ROI_tables_to_copy": {
            "title": "Roi Tables To Copy",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of ROI table names to copy from 2D OME-Zarr to 3D OME-Zarr"
          },
          "new_label_name": {
            "title": "New Label Name",
            "type": "string",
            "description": "Optionally overwriting the name of the label in the 3D OME-Zarr"
          },
          "new_table_names": {
            "title": "New Table Names",
            "type": "array",
            "items": {},
            "description": "Optionally overwriting the names of the ROI tables in the 3D OME-Zarr"
          },
          "level": {
            "title": "Level",
            "default": 0,
            "type": "integer",
            "description": "Level of the 2D OME-Zarr label to copy from"
          },
          "suffix": {
            "title": "Suffix",
            "default": "mip",
            "type": "string",
            "description": "Suffix of the 2D OME-Zarr to copy from"
          },
          "overwrite": {
            "title": "Overwrite",
            "default": false,
            "type": "boolean",
            "description": "If `True`, overwrite existing label and ROI tables in the 3D OME-Zarr"
          }
        },
        "required": [
          "input_paths",
          "output_path",
          "component",
          "metadata",
          "label_name"
        ],
        "additionalProperties": false
      },
      "meta": {
        "parallelization_level": "image",
        "cpus_per_task": 2,
        "mem": 8000
      },
      "docs_info": "This task loads the 2D segmentation, replicates it along the Z slice and\nstores it back into the 3D OME-Zarr image.\n\nThis is a temporary workaround task, as long as we store 2D data in\na separate OME-Zarr file from the 3D data. Also, some assumptions are made\non the metadata structure, generalization to be tested."
    },
    {
      "name": "Convert Metadata Components 2D to 3D",
      "executable": "convert_metadata_components_2D_to_3D.py",
      "input_type": "zarr",
      "output_type": "zarr",
      "args_schema": {
        "title": "ConvertMetadataComponents2dTo3d",
        "type": "object",
        "properties": {
          "input_paths": {
            "title": "Input Paths",
            "description": "List of paths to the input files (Fractal managed)"
          },
          "output_path": {
            "title": "Output Path",
            "description": "Path to the output file (Fractal managed)"
          },
          "metadata": {
            "title": "Metadata",
            "description": "Metadata dictionary (Fractal managed)"
          },
          "from_2d_to_3d": {
            "title": "From 2D To 3D",
            "default": true,
            "type": "boolean",
            "description": "If True, removes the suffix. If False, adds the suffix to the metadata"
          },
          "suffix": {
            "title": "Suffix",
            "default": "mip",
            "type": "string",
            "description": "Suffix of the 2D OME-Zarr"
          }
        },
        "required": [
          "input_paths",
          "output_path",
          "metadata"
        ],
        "additionalProperties": false
      },
      "meta": {
        "cpus_per_task": 1,
        "mem": 1000
      },
      "docs_info": "Workaround task to manually change the hard-coded metadata components\nA fractal workflow sets them to the mip.zarr components after running the\nmaximum intensity projection task. This resets them to the 3D components."
    },
    {
      "name": "Drop T dimension",
      "executable": "drop_t_dimension.py",
      "input_type": "zarr",
      "output_type": "zarr",
      "meta": {
        "parallelization_level": "image",
        "cpus_per_task": 2,
        "mem": 8000
      },
      "docs_info": "Drops singleton t dimension.",
      "args_schema": {
        "title": "DropTDimension",
        "type": "object",
        "properties": {
          "input_paths": {
            "title": "Input Paths",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "This parameter is not used by this task. This task only supports a single input path. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "output_path": {
            "title": "Output Path",
            "type": "string",
            "description": "Path were the output of this task is stored. Example: `\"/some/path/\"` => puts the new OME-Zarr file in that folder. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "component": {
            "title": "Component",
            "type": "string",
            "description": "Path to the OME-Zarr image in the OME-Zarr plate that is processed. Component is typically changed by the `copy_ome_zarr` task before, to point to a new mip Zarr file. Example: `\"some_plate_mip.zarr/B/03/0\"`. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "description": "Dictionary containing metadata about the OME-Zarr. This task requires the key `copy_ome_zarr` to be present in the metadata (as defined in `copy_ome_zarr` task). (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "suffix": {
            "title": "Suffix",
            "default": "no_T",
            "type": "string",
            "description": "Suffix to be used for the new Zarr image. If overwrite_input is True, this file is only temporary."
          }
        },
        "required": [
          "input_paths",
          "output_path",
          "component",
          "metadata"
        ],
        "additionalProperties": false
      }
    }
  ],
  "has_args_schemas": true,
  "args_schema_version": "pydantic_v1"
}
