{
  "manifest_version": "2",
  "task_list": [
    {
      "name": "Drop T Dimension",
      "output_types": {
        "has_t": false
      },
      "tags": [
        "Singleton time dimension"
      ],
      "docs_info": "### Purpose\n- Removes a **singleton time (T) dimension** from an OME-Zarr image.  \n- Creates a new OME-Zarr image with updated metadata and dimensions.\n- Optionally overwrites the input image if `overwrite_input` is set to True.\n\n### Outputs\n- A **new Zarr image** without the singleton T-dimension, stored with a configurable suffix.  \n\n### Limitations\n- Only processes OME-Zarr images where the **T-axis is the first axis**.  \n- Assumes the T-dimension is **singleton**; does not process non-singleton time axes.  \n- Does not copy associated **label images** to the new Zarr structure.  ",
      "type": "parallel",
      "executable_parallel": "drop_t_dimension.py",
      "meta_parallel": {
        "cpus_per_task": 2,
        "mem": 8000
      },
      "args_schema_parallel": {
        "additionalProperties": false,
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "Path or url to the individual OME-Zarr image to be processed. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "suffix": {
            "default": "no_T",
            "title": "Suffix",
            "type": "string",
            "description": "Suffix to be used for the new Zarr image. If overwrite_input is True, this file is only temporary."
          },
          "overwrite_input": {
            "default": false,
            "title": "Overwrite Input",
            "type": "boolean",
            "description": "Whether the existing iamge should be overwritten with the new OME-Zarr without the T dimension."
          }
        },
        "required": [
          "zarr_url"
        ],
        "type": "object",
        "title": "DropTDimension"
      },
      "docs_link": "https://github.com/jluethi/fractal-helper-tasks"
    },
    {
      "name": "Convert 2D segmentation to 3D",
      "input_types": {
        "is_3D": false
      },
      "output_types": {
        "is_3D": true
      },
      "tags": [
        "Mixed modality",
        "2D to 3D workflows"
      ],
      "docs_info": "### Purpose\n- Converts a **2D segmentation** image into a **3D segmentation** by replicating the 2D segmentation across Z-slices.  \n- Supports OME-Zarr datasets where **2D and 3D images** share the same base name but differ by suffixes.  \n- Optionally copies associated ROI tables and adjusts them to align with the replicated Z-dimensions.  \n\n### Outputs\n- A **3D segmentation label image** saved with a new name.  \n- Updated **ROI tables** adjusted for Z-dimensions (optional).  \n\n### Limitations\n- Only supports **same-base 2D and 3D Zarr names**; full flexibility in file names is not yet implemented.  \n- Assumes **2D OME-Zarr images** and corresponding 3D images are stored in the same base folder and just differ with a suffix before the .zarr.  \n",
      "type": "parallel",
      "executable_parallel": "convert_2D_segmentation_to_3D.py",
      "meta_parallel": {
        "cpus_per_task": 2,
        "mem": 8000
      },
      "args_schema_parallel": {
        "additionalProperties": false,
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "Path or url to the individual OME-Zarr image to be processed. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "label_name": {
            "title": "Label Name",
            "type": "string",
            "description": "Name of the label to copy from 2D OME-Zarr to 3D OME-Zarr"
          },
          "level": {
            "default": "0",
            "title": "Level",
            "type": "string",
            "description": "Level of the 2D OME-Zarr label to copy from. Valid choices are \"0\", \"1\", etc. (depending on which levels are available in the OME-Zarr label)."
          },
          "tables_to_copy": {
            "items": {
              "type": "string"
            },
            "title": "Tables To Copy",
            "type": "array",
            "description": "List of tables to copy from 2D OME-Zarr to 3D OME-Zarr"
          },
          "new_label_name": {
            "title": "New Label Name",
            "type": "string",
            "description": "Optionally overwriting the name of the label in the 3D OME-Zarr"
          },
          "new_table_names": {
            "items": {},
            "title": "New Table Names",
            "type": "array",
            "description": "Optionally overwriting the names of the tables in the 3D OME-Zarr"
          },
          "plate_suffix": {
            "default": "_mip",
            "title": "Plate Suffix",
            "type": "string",
            "description": "Suffix of the 2D OME-Zarr that needs to be removed to generate the path to the 3D OME-Zarr. If the 2D OME-Zarr is \"/path/to/my_plate_mip.zarr/B/03/0\" and the 3D OME-Zarr is located in \"/path/to/my_plate.zarr/B/03/0\", the correct suffix is \"_mip\"."
          },
          "image_suffix_2D_to_remove": {
            "title": "Image Suffix 2D To Remove",
            "type": "string",
            "description": "If the image name between 2D & 3D don't match, this is the suffix that should be removed from the 2D image. If the 2D image is in \"/path/to/my_plate_mip.zarr/B/03/ 0_registered\" and the 3D image is in \"/path/to/my_plate.zarr/ B/03/0\", the value should be \"_registered\""
          },
          "image_suffix_3D_to_add": {
            "title": "Image Suffix 3D To Add",
            "type": "string",
            "description": "If the image name between 2D & 3D don't match, this is the suffix that should be added to the 3D image. If the 2D image is in \"/path/to/my_plate_mip.zarr/B/03/0\" and the 3D image is in \"/path/to/my_plate.zarr/B/03/0_illum_corr\", the value should be \"_illum_corr\"."
          },
          "z_chunks": {
            "title": "Z Chunks",
            "type": "integer",
            "description": "Chunking for the Z dimension. Set this parameter if you want the label image to be chunked differently from the 3D image in the Z dimension."
          },
          "overwrite": {
            "default": false,
            "title": "Overwrite",
            "type": "boolean",
            "description": "If `True`, overwrite existing label and ROI tables in the 3D OME-Zarr"
          }
        },
        "required": [
          "zarr_url"
        ],
        "type": "object",
        "title": "Convert2dSegmentationTo3d"
      },
      "docs_link": "https://github.com/jluethi/fractal-helper-tasks"
    },
    {
      "name": "Rechunk OME-Zarr",
      "tags": [
        "Rechunking",
        "Many files"
      ],
      "docs_info": "### Purpose\n- Rechunks OME-Zarr to new chunking parameters: Changes whether the array is stored as many small files or few larger files.\n- Optionally applies the same rechunking to label images.\n\n### Outputs\n- A **new Zarr image** that is rechunked.\n",
      "type": "parallel",
      "executable_parallel": "rechunk_zarr.py",
      "meta_parallel": {
        "cpus_per_task": 1,
        "mem": 4000
      },
      "args_schema_parallel": {
        "additionalProperties": false,
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "Path or url to the individual OME-Zarr image to be processed. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "chunk_sizes": {
            "additionalProperties": {
              "type": "integer"
            },
            "title": "Chunk Sizes",
            "type": "object",
            "description": "Dictionary of chunk sizes to adapt. One can set any of the t, c, z, y, x axes that exist in the input image to be resized to a different chunk size. For example, {\"y\": 4000, \"x\": 4000} will set a new x & y chunking while maintaining the other chunk sizes. {\"z\": 10} will just change the Z chunking while keeping all other chunk sizes the same as the input."
          },
          "suffix": {
            "default": "rechunked",
            "title": "Suffix",
            "type": "string",
            "description": "Suffix of the rechunked image."
          },
          "rechunk_labels": {
            "default": true,
            "title": "Rechunk Labels",
            "type": "boolean",
            "description": "Whether to apply the same rechunking to all label images of the OME-Zarr as well."
          },
          "rebuild_pyramids": {
            "default": true,
            "title": "Rebuild Pyramids",
            "type": "boolean",
            "description": "Whether pyramids are built fresh in the rechunked image. This has a small performance overhead, but ensures that this task is save against off-by-one issues when pyramid levels aren't easily downsampled by 2."
          },
          "overwrite_input": {
            "default": true,
            "title": "Overwrite Input",
            "type": "boolean",
            "description": "Whether the old image without rechunking should be overwritten (to avoid duplicating the data needed)."
          },
          "overwrite": {
            "default": false,
            "title": "Overwrite",
            "type": "boolean",
            "description": "Whether to overwrite potential pre-existing output with the name zarr_url_suffix."
          }
        },
        "required": [
          "zarr_url"
        ],
        "type": "object",
        "title": "RechunkZarr"
      },
      "docs_link": "https://github.com/jluethi/fractal-helper-tasks"
    },
    {
      "name": "Add Z Singleton Dimension",
      "input_types": {
        "is_3D": false
      },
      "tags": [
        "Singleton Z dimension"
      ],
      "docs_info": "### Purpose\n- Removes a **singleton time (T) dimension** from an OME-Zarr image.  \n- Creates a new OME-Zarr image with updated metadata and dimensions.\n- Optionally overwrites the input image if `overwrite_input` is set to True.\n\n### Outputs\n- A **new Zarr image** without the singleton T-dimension, stored with a configurable suffix.  \n\n### Limitations\n- Only processes OME-Zarr images where the **T-axis is the first axis**.  \n- Assumes the T-dimension is **singleton**; does not process non-singleton time axes.  \n- Does not copy associated **label images** to the new Zarr structure.  ",
      "type": "parallel",
      "executable_parallel": "add_z_singleton.py",
      "meta_parallel": {
        "cpus_per_task": 1,
        "mem": 4000
      },
      "args_schema_parallel": {
        "additionalProperties": false,
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "Path or url to the individual OME-Zarr image to be processed. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "suffix": {
            "default": "z_singleton",
            "title": "Suffix",
            "type": "string",
            "description": "Suffix to be used for the new Zarr image. If overwrite_input is True, this file is only temporary."
          },
          "overwrite_input": {
            "default": true,
            "title": "Overwrite Input",
            "type": "boolean",
            "description": "Whether the existing iamge should be overwritten with the new OME-Zarr with the Z singleton dimension."
          }
        },
        "required": [
          "zarr_url"
        ],
        "type": "object",
        "title": "AddZSingleton"
      },
      "docs_link": "https://github.com/jluethi/fractal-helper-tasks"
    },
    {
      "name": "Assign Label by Overlap",
      "tags": [
        "Label assignment",
        "Label processing"
      ],
      "docs_info": "### Purpose\n- Assigns labels of child label to the parent label based on overlap.\n- Uses a threshold and fills NA for labels with no sufficient overlap.\n- When multiple parent labels overlap with a child label, assigns the parent label with the maximum overlap.\n\n### Outputs\n- A new FeatureTable or an addition to an existing FeatureTable with the overlap measurements & assignments.\n\n### Limitations\n- Only processes OME-Zarrs where both parent and child label are in the same OME-Zarr image (in some multiplexing scenarios, those labels are in different images).",
      "type": "parallel",
      "executable_parallel": "label_assignment_by_overlap.py",
      "meta_parallel": {
        "cpus_per_task": 1,
        "mem": 4000
      },
      "args_schema_parallel": {
        "additionalProperties": false,
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "Path or url to the individual OME-Zarr image to be processed. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "parent_label_name": {
            "title": "Parent Label Name",
            "type": "string",
            "description": "Name of the parent label."
          },
          "child_label_name": {
            "title": "Child Label Name",
            "type": "string",
            "description": "Name of the child label. This label will be assigned to the parent label based on overlap. The parent label will appear in the child feature table as the \"(parent_label_name)_label\" column in the obs table of the anndata table."
          },
          "overlap_threshold": {
            "default": 1.0,
            "title": "Overlap Threshold",
            "type": "number",
            "description": "The minimum percentage (between 0 and 1) of child label object that must be contained in parent label object to be considered a match."
          },
          "overlap_table_name": {
            "title": "Overlap Table Name",
            "type": "string",
            "description": "Name of the feature table to which the overlap should be added. If the feature table already exists, the overlap measurements are added to it. Otherwise, an overlap table is created. If no name was given, a new table named parent_label_name + child_label_name + '_overlap' is created."
          },
          "level_path": {
            "title": "Level Path",
            "type": "string",
            "description": "Resolution of the label image to calculate overlap. Full resolution label is used by default. Typically overriden with 0 (full resolution), 1 (half resolution), etc."
          }
        },
        "required": [
          "zarr_url",
          "parent_label_name",
          "child_label_name"
        ],
        "type": "object",
        "title": "LabelAssignmentByOverlap"
      },
      "docs_link": "https://github.com/jluethi/fractal-helper-tasks"
    }
  ],
  "has_args_schemas": true,
  "args_schema_version": "pydantic_v2",
  "authors": "Joel Luethi"
}
