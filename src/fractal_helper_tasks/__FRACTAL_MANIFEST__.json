{
  "manifest_version": "2",
  "task_list": [
    {
      "name": "Drop T Dimension",
      "output_types": {
        "has_t": false
      },
      "tags": [
        "Singleton time dimension"
      ],
      "executable_non_parallel": "drop_t_dimension.py",
      "meta_non_parallel": {
        "cpus_per_task": 2,
        "mem": 8000
      },
      "args_schema_non_parallel": {
        "additionalProperties": false,
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "Path or url to the individual OME-Zarr image to be processed. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "suffix": {
            "default": "no_T",
            "title": "Suffix",
            "type": "string",
            "description": "Suffix to be used for the new Zarr image. If overwrite_input is True, this file is only temporary."
          },
          "overwrite_input": {
            "default": false,
            "title": "Overwrite Input",
            "type": "boolean",
            "description": "Whether"
          }
        },
        "required": [
          "zarr_url"
        ],
        "type": "object",
        "title": "DropTDimension"
      },
      "docs_info": "## drop_t_dimension\nDrops singleton t dimension.\n"
    },
    {
      "name": "Convert 2D segmentation to 3D",
      "input_types": {
        "is_3D": false
      },
      "tags": [
        "Mixed modality",
        "2D to 3D workflows"
      ],
      "executable_parallel": "convert_2D_segmentation_to_3D.py",
      "meta_parallel": {
        "cpus_per_task": 2,
        "mem": 8000
      },
      "args_schema_parallel": {
        "additionalProperties": false,
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "Path or url to the individual OME-Zarr image to be processed. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "label_name": {
            "title": "Label Name",
            "type": "string",
            "description": "Name of the label to copy from 2D OME-Zarr to 3D OME-Zarr"
          },
          "level": {
            "default": 0,
            "title": "Level",
            "type": "integer",
            "description": "Level of the 2D OME-Zarr label to copy from"
          },
          "ROI_tables_to_copy": {
            "items": {
              "type": "string"
            },
            "title": "Roi Tables To Copy",
            "type": "array",
            "description": "List of ROI table names to copy from 2D OME-Zarr to 3D OME-Zarr"
          },
          "new_label_name": {
            "title": "New Label Name",
            "type": "string",
            "description": "Optionally overwriting the name of the label in the 3D OME-Zarr"
          },
          "new_table_names": {
            "items": {},
            "title": "New Table Names",
            "type": "array",
            "description": "Optionally overwriting the names of the ROI tables in the 3D OME-Zarr"
          },
          "plate_suffix": {
            "default": "_mip",
            "title": "Plate Suffix",
            "type": "string",
            "description": "Suffix of the 2D OME-Zarr that needs to be removed to generate the path to the 3D OME-Zarr. If the 2D OME-Zarr is \"/path/to/my_plate_mip.zarr/B/03/0\" and the 3D OME-Zarr is located in \"/path/to/my_plate.zarr/B/03/0\", the correct suffix is \"_mip\"."
          },
          "image_suffix_2D_to_remove": {
            "title": "Image Suffix 2D To Remove",
            "type": "string",
            "description": "If the image name between 2D & 3D don't match, this is the suffix that should be removed from the 2D image. If the 2D image is in \"/path/to/my_plate_mip.zarr/B/03/ 0_registered\" and the 3D image is in \"/path/to/my_plate.zarr/ B/03/0\", the value should be \"_registered\""
          },
          "image_suffix_3D_to_add": {
            "title": "Image Suffix 3D To Add",
            "type": "string",
            "description": "If the image name between 2D & 3D don't match, this is the suffix that should be added to the 3D image. If the 2D image is in \"/path/to/my_plate_mip.zarr/B/03/0\" and the 3D image is in \"/path/to/my_plate.zarr/B/03/0_illum_corr\", the value should be \"_illum_corr\"."
          },
          "overwrite": {
            "default": false,
            "title": "Overwrite",
            "type": "boolean",
            "description": "If `True`, overwrite existing label and ROI tables in the 3D OME-Zarr"
          }
        },
        "required": [
          "zarr_url",
          "label_name"
        ],
        "type": "object",
        "title": "Convert2dSegmentationTo3d"
      },
      "docs_info": "## convert_2D_segmentation_to_3D\nConvert 2D segmentation to 3D segmentation.\n\nThis task loads the 2D segmentation, replicates it along the Z slice and\nstores it back into the 3D OME-Zarr image.\n\nThis is a temporary workaround task, as long as we store 2D data in\na separate OME-Zarr file from the 3D data. If the 2D & 3D OME-Zarr images\nhave different suffixes in their name, use `image_suffix_2D_to_remove` &\n`image_suffix_3D_to_add`. If their base names are different, this task\ndoes not support processing them at the moment.\n\nIt makes the assumption that the 3D OME-Zarrs are stored in the same place\nas the 2D OME-Zarrs (same based folder).\n"
    }
  ],
  "has_args_schemas": true,
  "args_schema_version": "pydantic_v2",
  "authors": "Joel Luethi"
}
